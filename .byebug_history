c
exit
@client.Project.all()
@client.Project.all(*)
@client
exit
@client.Project.all()
@client.Project.all
@client
exit
jira.Project.find('VIS')
jira
jira = Jira.new
Jira.new
c
Jira.new.jiraize_cr(@change_request)
c
change_request
 jiraize(change_request.business_justification)
generate_issue_list(list.flatten)
find_jira_key(change_request.os)
find_jira_key(change_request.business_justification)
list = Set.new
change_request
c
@jira_change_request
c
@change_request
@chang_request
c
exit
jira_client.methods
jira_client = Jira.new
Jira.new
Jira.new.jiraize_cr(@change_request)
@change_request
exit
pp attributes
attributes.pp
attributes
exit
access_request_version.count
access_request_version.last
access_request_version
access_request_version_first
exit
response
response.body
exit
response.body
response
exit
access_request
c
IncidentReport.search_full_text("Service").count
IncidentReport.search_full_text("Service")
IncidentReport.last
IncidentReport.count
c
ChangeRequest.last.user
ChangeRequest.last
notification = FactoryBot.create(:notification, user: user, change_request: cr, message: 'new_cr')
ChangeRequest.count
cr
c
exit
ChangeRequest.search_full_text("asdasd")
ChangeRequest.search_full_text('asdasd')
ChangeRequest.first
c
assigns(:search)
assigns(:search).count
ChangeRequest.count
c
ChangeRequest.count
change_request.reload
ChangeRequest.reload!
ChangeRequest.reload
other_cr
change_request
ChangeRequest.count
c
ChangeRequest.count
c
ChangeRequest.count
c
ChangeRequest.count
c
x
c
expect(assigns(:change_requests)).to match_array([change_request, other_cr])
assigns(:change_requests)
c
ChangeRequest.count
ChangeRequst.count
change_request
c
exit
change_request.reload
other_cr
change_request
c
ChangeRequest.count
c
change_request
ChangeRequest.count
c
exit
assigns(:search).current_page
assigns(:search).next_page
assigns(:search).last_page
first_page
assigns(:search).next_page
assigns(:search).total_pages
assigns(:search).total_count
assigns(:search).methods
assigns(:search).nethods
exit
response.each
response.each do |n|
response.each do |n| do
response.each do |n| dp
response.each |b|
response.body
response.methods
c
response.status
response.parsed_body
exit
response.methods
response.method
AccessRequest.search_full_text("Employee")
AccessRequest.first.employee_name
AccessRequest.employee_name
AccessRequest
AccessRequest.count
c
response.body
exit
response.body
response
c
exit
User.first_or_create(email: "16@***REMOVED***", role: "requestor", name: "Lutfi K P di Veritrans")
User.find_or_create(email: "16@***REMOVED***", role: "requestor", name: "Lutfi K P di Veritrans")
User.create(email: "16@***REMOVED***", role: "requestor", name: "Lutfi K P di Veritrans")
user_requester.id
exit
change_request_version.whodunnit
change_request_version.save(validate: false)
change_request_version.whodunnit = user_requesters[3].id
change_request_version = change_request.versions.first
exit
change_request_version
change_request_version.first
change_request_version
change_request_version.whodunnit
change_request_version.update(whodunnit: 3)
change_request_version.whodunnit = 3
change_request_version.whodunnit
change_request_version.update(whodunnit: user_requesters[3].id)
change_request_version = change_request.versions.first
exit
change_request_version = change_request.versions
change_request_version = change_request.versions.first
change_request
exit
change_request_version = change_request
change_request_version = change_request.versions
change_request_version = change_request.versions.first
exit
change_request.user.save!
change_request.user.save
change_request.user
change_request
change_request.user.id
change_request_version
change_request.versions.first
change_request.versions
change_request_version
exit
change_request.user.id
change_request.user
change_request
change_request_version
change_request_version.user_id
change_request_version.user.id
change_request_version.user
exit
cr.versions.first.whodunnit
cr.versions.first
cr = ChangeRequest.first
change_request_version.whodunnit
change_request_version.save
change_request_version
exit
change_request_1.versions.last
change_request_1.versions.last.whodunnit
exit
user[3]
3
user[1].id
user[3].id
user[3]
change_request_1.versions.last.whodunnit
change_request_1.versions.last
change_request_1.versions
change_request_1
exit
cr.versions.last
cr.versions
cr
exit
cr.versions
cr
cr.versions.last
cr
exit
attributes
cr.implementers
cr.implementers.count
c
exit
ChangeRequest.solr_search
ChangeRequest.search
ChangeRequest.solr_search
ChangeRequest.solr_search do
c
ec\
value
c
@search
search
c
cr.aasm_state
cr.testers.count
pp cr.implementers.count
pp cr.implementers.ids
pp cr.implementers.id
pp cr.implementers
pp cr
cr
cr.implementers
cr.implementer
cr
c
exit
ChangeRequest.reload!
ChangeRequest.preload
ChangeRequest.reload
ChangeRequest.count
cr1=FactoryGirl.create(:change_request)
change_request
other_cr
ChangeRequest.count
c
